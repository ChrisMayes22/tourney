// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`When unconnected component first renders UploadPagerenders as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UploadPage
    characters={Array []}
    players={4}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        null,
        <div>
          <section>
            <h3>
              Upload 4 images that will be competing, (using a url)...
              <br />
              ...Or begin the game.
            </h3>
            <input
              default="image-url"
              onChange={[Function]}
              type="text"
            />
            <submitButton
              clicked={[Function]}
              id="uploadButton"
            >
              Upload
            </submitButton>
            <Link
              id="beginGameButton"
              replace={false}
              to="/not-enough-characters"
            >
              <submitButton>
                Begin Game
              </submitButton>
            </Link>
          </section>
          <section
            id="grid"
          >
            <header>
              <h1>
                Uploaded Images
              </h1>
              <h5>
                Click Image to Remove
              </h5>
            </header>
          </section>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <section>
              <h3>
                Upload 4 images that will be competing, (using a url)...
                <br />
                ...Or begin the game.
              </h3>
              <input
                default="image-url"
                onChange={[Function]}
                type="text"
              />
              <submitButton
                clicked={[Function]}
                id="uploadButton"
              >
                Upload
              </submitButton>
              <Link
                id="beginGameButton"
                replace={false}
                to="/not-enough-characters"
              >
                <submitButton>
                  Begin Game
                </submitButton>
              </Link>
            </section>,
            <section
              id="grid"
            >
              <header>
                <h1>
                  Uploaded Images
                </h1>
                <h5>
                  Click Image to Remove
                </h5>
              </header>
            </section>,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3>
                  Upload 4 images that will be competing, (using a url)...
                  <br />
                  ...Or begin the game.
                </h3>,
                <input
                  default="image-url"
                  onChange={[Function]}
                  type="text"
                />,
                <submitButton
                  clicked={[Function]}
                  id="uploadButton"
                >
                  Upload
                </submitButton>,
                <Link
                  id="beginGameButton"
                  replace={false}
                  to="/not-enough-characters"
                >
                  <submitButton>
                    Begin Game
                  </submitButton>
                </Link>,
              ],
              "className": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Upload 4 images that will be competing, (using a url)...",
                    <br />,
                    "...Or begin the game.",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Upload 4 images that will be competing, (using a url)...",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "br",
                  },
                  "...Or begin the game.",
                ],
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "default": "image-url",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Upload",
                  "clicked": [Function],
                  "id": "uploadButton",
                },
                "ref": null,
                "rendered": "Upload",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <submitButton>
                    Begin Game
                  </submitButton>,
                  "id": "beginGameButton",
                  "replace": false,
                  "to": "/not-enough-characters",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Begin Game",
                  },
                  "ref": null,
                  "rendered": "Begin Game",
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": "section",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <header>
                  <h1>
                    Uploaded Images
                  </h1>
                  <h5>
                    Click Image to Remove
                  </h5>
                </header>,
                Array [],
              ],
              "className": undefined,
              "id": "grid",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h1>
                      Uploaded Images
                    </h1>,
                    <h5>
                      Click Image to Remove
                    </h5>,
                  ],
                  "className": undefined,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Uploaded Images",
                    },
                    "ref": null,
                    "rendered": "Uploaded Images",
                    "type": "h1",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Click Image to Remove",
                    },
                    "ref": null,
                    "rendered": "Click Image to Remove",
                    "type": "h5",
                  },
                ],
                "type": "header",
              },
            ],
            "type": "section",
          },
        ],
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          null,
          <div>
            <section>
              <h3>
                Upload 4 images that will be competing, (using a url)...
                <br />
                ...Or begin the game.
              </h3>
              <input
                default="image-url"
                onChange={[Function]}
                type="text"
              />
              <submitButton
                clicked={[Function]}
                id="uploadButton"
              >
                Upload
              </submitButton>
              <Link
                id="beginGameButton"
                replace={false}
                to="/not-enough-characters"
              >
                <submitButton>
                  Begin Game
                </submitButton>
              </Link>
            </section>
            <section
              id="grid"
            >
              <header>
                <h1>
                  Uploaded Images
                </h1>
                <h5>
                  Click Image to Remove
                </h5>
              </header>
            </section>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <section>
                <h3>
                  Upload 4 images that will be competing, (using a url)...
                  <br />
                  ...Or begin the game.
                </h3>
                <input
                  default="image-url"
                  onChange={[Function]}
                  type="text"
                />
                <submitButton
                  clicked={[Function]}
                  id="uploadButton"
                >
                  Upload
                </submitButton>
                <Link
                  id="beginGameButton"
                  replace={false}
                  to="/not-enough-characters"
                >
                  <submitButton>
                    Begin Game
                  </submitButton>
                </Link>
              </section>,
              <section
                id="grid"
              >
                <header>
                  <h1>
                    Uploaded Images
                  </h1>
                  <h5>
                    Click Image to Remove
                  </h5>
                </header>
              </section>,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3>
                    Upload 4 images that will be competing, (using a url)...
                    <br />
                    ...Or begin the game.
                  </h3>,
                  <input
                    default="image-url"
                    onChange={[Function]}
                    type="text"
                  />,
                  <submitButton
                    clicked={[Function]}
                    id="uploadButton"
                  >
                    Upload
                  </submitButton>,
                  <Link
                    id="beginGameButton"
                    replace={false}
                    to="/not-enough-characters"
                  >
                    <submitButton>
                      Begin Game
                    </submitButton>
                  </Link>,
                ],
                "className": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Upload 4 images that will be competing, (using a url)...",
                      <br />,
                      "...Or begin the game.",
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "Upload 4 images that will be competing, (using a url)...",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "br",
                    },
                    "...Or begin the game.",
                  ],
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "default": "image-url",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Upload",
                    "clicked": [Function],
                    "id": "uploadButton",
                  },
                  "ref": null,
                  "rendered": "Upload",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <submitButton>
                      Begin Game
                    </submitButton>,
                    "id": "beginGameButton",
                    "replace": false,
                    "to": "/not-enough-characters",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Begin Game",
                    },
                    "ref": null,
                    "rendered": "Begin Game",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "section",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <header>
                    <h1>
                      Uploaded Images
                    </h1>
                    <h5>
                      Click Image to Remove
                    </h5>
                  </header>,
                  Array [],
                ],
                "className": undefined,
                "id": "grid",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h1>
                        Uploaded Images
                      </h1>,
                      <h5>
                        Click Image to Remove
                      </h5>,
                    ],
                    "className": undefined,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Uploaded Images",
                      },
                      "ref": null,
                      "rendered": "Uploaded Images",
                      "type": "h1",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Click Image to Remove",
                      },
                      "ref": null,
                      "rendered": "Click Image to Remove",
                      "type": "h5",
                    },
                  ],
                  "type": "header",
                },
              ],
              "type": "section",
            },
          ],
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
